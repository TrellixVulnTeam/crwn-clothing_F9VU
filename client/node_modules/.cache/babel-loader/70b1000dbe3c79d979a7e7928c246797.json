{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATA/Avin Project 2/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Volumes/DATA/Avin Project 2/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","CollectionPage","withSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;KAAMM,8B;AACN,MAAMC,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACFC,MAAAA,OAAO,EAAE;AADP,KAD4B;AAAA,SAMpCC,uBANoC,GAMV,IANU;AAAA;;AAQpCC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvE,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACF,KAJ8B,CAA/B;AAKF;;AAEDU,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACM;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AACG,QAAA,MAAM,EAAGT,KAAK,iBACV,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH,OAA3C;AAAA,aAAwDG;AAAxD;AAAA;AAAA;AAAA;AAAA;AAFP;AAAA;AAAA;AAAA;AAAA,cADH,eAMG,QAAC,KAAD;AACG,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADvB;AAEG,QAAA,MAAM,EAAGT,KAAK,iBACV,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADN;AAeF;;AArCmC;;AAwCvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACrCpB,EAAAA,iBAAiB,EAAEc,cAAc,IAAIM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AADR,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\n\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions'\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n   state = {\n         loading: true \n   };\n\n\n   unsubscribeFromSnapshot = null;\n\n   componentDidMount(){\n      const { updateCollections } = this.props;\n      const collectionRef = firestore.collection('collections');\n\n      this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n         updateCollections(collectionsMap); \n         this.setState({ loading: false });    \n      });\n   };\n\n   render() {\n      const { match } = this.props;\n      const { loading } = this.state;\n      return (\n            <div className='shop-page'>\n               <Route exact path={`${match.path}`} \n                  render={ props => ( \n                      <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n                  )}\n               />\n               <Route \n                  path={`${match.path}/:collectionId`} \n                  render={ props => (\n                      <CollectionPageWithSpinner isLoading={loading} {...props} />\n                     )}\n                  />\n            </div> \n      );\n   }\n} \n\nconst mapDispatchToProps = dispatch => ({\n   updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\n \nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}