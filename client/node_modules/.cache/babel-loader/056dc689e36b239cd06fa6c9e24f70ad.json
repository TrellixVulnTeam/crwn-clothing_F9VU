{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATA/Avin Project 2/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Volumes/DATA/Avin Project 2/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","createStructuredSelector","Route","CollectionsOverview","CollectionPage","withSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;MAAMK,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEpCC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAAiC,KAAKO,KAA5C;AACAP,IAAAA,0BAA0B;AAC5B;;AAEDQ,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACM;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACG,QAAA,MAAM,EAAGJ,KAAK,iBACV,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA;AAFP;AAAA;AAAA;AAAA;AAAA,cADH,eAMG,QAAC,KAAD;AACG,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADvB;AAEG,QAAA,MAAM,EAAGJ,KAAK,iBACV,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAAgEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADN;AAeF;;AAxBmC;;AA2BvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC9Ce,EAAAA,oBAAoB,EAAET;AADwB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACrCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAKA,eAAeN,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { createStructuredSelector } from 'reselect';\n\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\n\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n   componentDidMount(){\n      const { fetchCollectionsStartAsync } = this.props;\n      fetchCollectionsStartAsync();\n   }\n\n   render() {\n      const { match, isCollectionFetching } = this.props;\n      return (\n            <div className='shop-page'>\n               <Route exact path={`${match.path}`} \n                  render={ props => ( \n                      <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n                  )}\n               />\n               <Route \n                  path={`${match.path}/:collectionId`} \n                  render={ props => (\n                      <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />\n                     )}\n                  />\n            </div> \n      );\n   }\n} \n\nconst mapStateToProps = createStructuredSelector({\n   isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n \nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}